# ÁªôÂÆö‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ sÔºåÊâæÂà∞ s ‰∏≠ÊúÄÈïøÁöÑÂõûÊñáÂ≠ê‰∏≤„ÄÇ‰Ω†ÂèØ‰ª•ÂÅáËÆæ s ÁöÑÊúÄÂ§ßÈïøÂ∫¶‰∏∫ 1000„ÄÇ 
# 
#  Á§∫‰æã 1Ôºö 
# 
#  ËæìÂÖ•: "babad"
# ËæìÂá∫: "bab"
# Ê≥®ÊÑè: "aba" ‰πüÊòØ‰∏Ä‰∏™ÊúâÊïàÁ≠îÊ°à„ÄÇ
#  
# 
#  Á§∫‰æã 2Ôºö 
# 
#  ËæìÂÖ•: "cbbd"
# ËæìÂá∫: "bb"
#  
#  Related Topics Â≠óÁ¨¶‰∏≤ Âä®ÊÄÅËßÑÂàí 
#  üëç 2722 üëé 0


# leetcode submit region begin(Prohibit modification and deletion)
class Solution:
    def longestPalindrome(self, s: str) -> str:
        """
        1 Â•áÊï∞ i = j
        2 ÂÅ∂Êï∞ i - j = 1 and s[i] = s[j]
        3 s[i] = s[j] dp[j + 1][i - 1] = 1
        """
        n = len(s)
        dp = [[0] * n for _ in range(n)]
        max_len = 0
        tmp = ''
        for i in range(n):
            for j in range(i + 1):
                if s[j] == s[i] and (i - j <= 1 or dp[j + 1][i - 1] >= 1):
                    dp[j][i] = 1 * (i - j + 1)
                    if dp[j][i] > max_len:
                        max_len = dp[j][i]
                        tmp = s[j:i + 1]
        return tmp

# leetcode submit region end(Prohibit modification and deletion)
